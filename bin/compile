#!/bin/sh

set -e

indent() {
  sed -u 's/^/       /'
}

###### Install rclone ##########
echo "-----> Installing rclone"
BUILD_DIR=$1
CACHE_DIR=$2
VENDOR_DIR="vendor"
FILE="rclone-current-linux-amd64.zip"
DOWNLOAD_URL="https://downloads.rclone.org/$FILE"

mkdir -p "$CACHE_DIR"

if ! [ -e "$CACHE_DIR/$FILE" ]; then
  echo "-----> Fetching Latest rclone binaries at ${DOWNLOAD_URL}" | indent
  wget $DOWNLOAD_URL -q -O "$CACHE_DIR/$FILE"
else
  filestr=$(find . -name "$CACHE_DIR/$FILE" -mtime +1 -print)
  if [ "$filestr" = "" ]; then
    echo "-----> Cache Expired, Fetching Latest rclone at ${DOWNLOAD_URL}" | indent
    wget $DOWNLOAD_URL -q -O "$CACHE_DIR/$FILE"
  else
    echo "Build using cached source"  | indent
  fi
fi

cd "$BUILD_DIR"
mkdir -p "$VENDOR_DIR"
cd "$VENDOR_DIR"
mkdir -p rclone
cd rclone
cp "$CACHE_DIR/$FILE" .
unzip -qqj "$FILE"
rm -rf "$FILE"

echo "Exporting PATH" | indent
PROFILE_PATH="$BUILD_DIR/.profile.d/rclone.sh"
mkdir -p "$(dirname "$PROFILE_PATH")"
echo 'export PATH="$PATH:${HOME}/vendor/rclone"' >> $PROFILE_PATH
echo "rclone Installed"  | indent

###### Install Aria2 ##########
echo "-----> Installing Aria2"

FILE="aria2-1.34.0-linux-gnu-64bit-build1"
FILE_ARC="${FILE}.tar.bz2"
DOWNLOAD_URL="https://github.com/q3aql/aria2-static-builds/releases/download/v1.34.0/$FILE_ARC"

if ! [ -e "$CACHE_DIR/$FILE_ARC" ]; then
  echo "-----> Fetching Aria2 binaries at ${DOWNLOAD_URL}" | indent
  wget "$DOWNLOAD_URL" -q -O "$CACHE_DIR/$FILE_ARC"
else
  echo "Build using cached source"  | indent
fi


cd "$BUILD_DIR/$VENDOR_DIR"
mkdir -p aria2c
cd aria2c
cp "$CACHE_DIR/$FILE_ARC" .
tar jxf "$FILE_ARC"
mv "$FILE"/* .
rm -rf "$FILE_ARC" "$FILE"

echo "Exporting PATH" | indent
PROFILE_PATH="$BUILD_DIR/.profile.d/aria2c.sh"
mkdir -p "$(dirname "$PROFILE_PATH")"
echo 'export PATH="$PATH:${HOME}/vendor/aria2c"' >> $PROFILE_PATH

#### Install WinRAR ########

echo "-----> Installing winrar"

FILE="rarlinux-x64-5.9.0.tar.gz"
DOWNLOAD_URL="https://www.rarlab.com/rar/$FILE"

if ! [ -e "$CACHE_DIR/$FILE" ]; then
  echo "-----> Fetching Winrar binaries at ${DOWNLOAD_URL}" | indent
  wget $DOWNLOAD_URL -q -O "$CACHE_DIR/$FILE"
else
  echo "Build using cached source"  | indent
fi

cd "$BUILD_DIR/$VENDOR_DIR"
mkdir -p winrar
cd winrar
cp "$CACHE_DIR/$FILE" .
tar xf "$CACHE_DIR/$FILE" --strip-components=1

echo "Exporting PATH" | indent
PROFILE_PATH="$BUILD_DIR/.profile.d/rar.sh"
mkdir -p "$(dirname "$PROFILE_PATH")"
echo 'export PATH="$PATH:${HOME}/vendor/winrar"' >> $PROFILE_PATH
PROFILE_PATH="$BUILD_DIR/.profile.d/unrar.sh"
mkdir -p "$(dirname "$PROFILE_PATH")"
echo 'export PATH="$PATH:${HOME}/vendor/winrar"' >> $PROFILE_PATH

#### Moving rclone.conf ########

mkdir -p "$BUILD_DIR"/.profile.d
cat <<EOF >"$BUILD_DIR"/.profile.d/rclone_config.sh
#!/bin/sh
indent() {
  sed -u 's/^/       /'
}

cd "\$HOME"
echo "-----> Moving rclone.conf config file"
if [ -f "rclone.conf" ]; then
  mkdir -p .config/rclone
  mv -f rclone.conf .config/rclone/rclone.conf
  echo "-----> Done."
else
  echo "Error: rclone.conf does not exist"  | indent
fi

echo "-----> Moving id_rsa"
if [ -f "id_rsa" ]; then
  mkdir -p .ssh
  mv -f id_rsa .ssh/id_rsa
  chmod 0700 .ssh/id_rsa
  echo "-----> Done."
else
  echo "Error: id_rsa does not exist"  | indent
fi


